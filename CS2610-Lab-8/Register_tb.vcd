$date
	Mon Apr 17 10:49:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Register_tb $end
$var wire 12 ! readData2 [11:0] $end
$var wire 12 " readData1 [11:0] $end
$var reg 1 # clk $end
$var reg 3 $ read1Addr [2:0] $end
$var reg 3 % read2Addr [2:0] $end
$var reg 1 & we $end
$var reg 3 ' writeAddr [2:0] $end
$var reg 12 ( writeData [11:0] $end
$scope module r $end
$var wire 3 ) addressr1 [2:0] $end
$var wire 3 * addressr2 [2:0] $end
$var wire 3 + addressw [2:0] $end
$var wire 1 # clock $end
$var wire 12 , data_in [11:0] $end
$var wire 1 & we $end
$var wire 8 - wes [7:0] $end
$var wire 8 . decoded_address [7:0] $end
$var wire 96 / data_out [95:0] $end
$var wire 12 0 data2 [11:0] $end
$var wire 12 1 data1 [11:0] $end
$scope module d1 $end
$var wire 3 2 in [2:0] $end
$var wire 3 3 nin [2:0] $end
$var wire 8 4 out [7:0] $end
$upscope $end
$scope module m1 $end
$var wire 96 5 a [95:0] $end
$var wire 3 6 sel [2:0] $end
$var wire 12 7 out [11:0] $end
$var wire 24 8 mid [23:0] $end
$scope module m1 $end
$var wire 48 9 a [47:0] $end
$var wire 2 : sel [1:0] $end
$var wire 12 ; out [11:0] $end
$var wire 24 < mid [23:0] $end
$scope module m1 $end
$var wire 24 = a [23:0] $end
$var wire 1 > notsel $end
$var wire 12 ? out [11:0] $end
$var wire 1 @ sel $end
$var wire 12 A sel1 [11:0] $end
$var wire 12 B sel2 [11:0] $end
$upscope $end
$scope module m2 $end
$var wire 24 C a [23:0] $end
$var wire 1 D notsel $end
$var wire 12 E out [11:0] $end
$var wire 1 F sel $end
$var wire 12 G sel1 [11:0] $end
$var wire 12 H sel2 [11:0] $end
$upscope $end
$scope module m3 $end
$var wire 24 I a [23:0] $end
$var wire 1 J notsel $end
$var wire 12 K out [11:0] $end
$var wire 1 L sel $end
$var wire 12 M sel1 [11:0] $end
$var wire 12 N sel2 [11:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 48 O a [47:0] $end
$var wire 2 P sel [1:0] $end
$var wire 12 Q out [11:0] $end
$var wire 24 R mid [23:0] $end
$scope module m1 $end
$var wire 24 S a [23:0] $end
$var wire 1 T notsel $end
$var wire 12 U out [11:0] $end
$var wire 1 V sel $end
$var wire 12 W sel1 [11:0] $end
$var wire 12 X sel2 [11:0] $end
$upscope $end
$scope module m2 $end
$var wire 24 Y a [23:0] $end
$var wire 1 Z notsel $end
$var wire 12 [ out [11:0] $end
$var wire 1 \ sel $end
$var wire 12 ] sel1 [11:0] $end
$var wire 12 ^ sel2 [11:0] $end
$upscope $end
$scope module m3 $end
$var wire 24 _ a [23:0] $end
$var wire 1 ` notsel $end
$var wire 12 a out [11:0] $end
$var wire 1 b sel $end
$var wire 12 c sel1 [11:0] $end
$var wire 12 d sel2 [11:0] $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 24 e a [23:0] $end
$var wire 1 f notsel $end
$var wire 12 g out [11:0] $end
$var wire 1 h sel $end
$var wire 12 i sel1 [11:0] $end
$var wire 12 j sel2 [11:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 96 k a [95:0] $end
$var wire 3 l sel [2:0] $end
$var wire 12 m out [11:0] $end
$var wire 24 n mid [23:0] $end
$scope module m1 $end
$var wire 48 o a [47:0] $end
$var wire 2 p sel [1:0] $end
$var wire 12 q out [11:0] $end
$var wire 24 r mid [23:0] $end
$scope module m1 $end
$var wire 24 s a [23:0] $end
$var wire 1 t notsel $end
$var wire 12 u out [11:0] $end
$var wire 1 v sel $end
$var wire 12 w sel1 [11:0] $end
$var wire 12 x sel2 [11:0] $end
$upscope $end
$scope module m2 $end
$var wire 24 y a [23:0] $end
$var wire 1 z notsel $end
$var wire 12 { out [11:0] $end
$var wire 1 | sel $end
$var wire 12 } sel1 [11:0] $end
$var wire 12 ~ sel2 [11:0] $end
$upscope $end
$scope module m3 $end
$var wire 24 !" a [23:0] $end
$var wire 1 "" notsel $end
$var wire 12 #" out [11:0] $end
$var wire 1 $" sel $end
$var wire 12 %" sel1 [11:0] $end
$var wire 12 &" sel2 [11:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 48 '" a [47:0] $end
$var wire 2 (" sel [1:0] $end
$var wire 12 )" out [11:0] $end
$var wire 24 *" mid [23:0] $end
$scope module m1 $end
$var wire 24 +" a [23:0] $end
$var wire 1 ," notsel $end
$var wire 12 -" out [11:0] $end
$var wire 1 ." sel $end
$var wire 12 /" sel1 [11:0] $end
$var wire 12 0" sel2 [11:0] $end
$upscope $end
$scope module m2 $end
$var wire 24 1" a [23:0] $end
$var wire 1 2" notsel $end
$var wire 12 3" out [11:0] $end
$var wire 1 4" sel $end
$var wire 12 5" sel1 [11:0] $end
$var wire 12 6" sel2 [11:0] $end
$upscope $end
$scope module m3 $end
$var wire 24 7" a [23:0] $end
$var wire 1 8" notsel $end
$var wire 12 9" out [11:0] $end
$var wire 1 :" sel $end
$var wire 12 ;" sel1 [11:0] $end
$var wire 12 <" sel2 [11:0] $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 24 =" a [23:0] $end
$var wire 1 >" notsel $end
$var wire 12 ?" out [11:0] $end
$var wire 1 @" sel $end
$var wire 12 A" sel1 [11:0] $end
$var wire 12 B" sel2 [11:0] $end
$upscope $end
$upscope $end
$scope module r_f[0] $end
$var wire 1 # clock $end
$var wire 12 C" in [11:0] $end
$var wire 1 D" mid $end
$var wire 1 E" we $end
$var wire 12 F" out [11:0] $end
$scope module d[0] $end
$var wire 1 G" D $end
$var wire 1 D" clk $end
$var reg 1 H" Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 I" D $end
$var wire 1 D" clk $end
$var reg 1 J" Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 K" D $end
$var wire 1 D" clk $end
$var reg 1 L" Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 M" D $end
$var wire 1 D" clk $end
$var reg 1 N" Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 O" D $end
$var wire 1 D" clk $end
$var reg 1 P" Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 Q" D $end
$var wire 1 D" clk $end
$var reg 1 R" Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 S" D $end
$var wire 1 D" clk $end
$var reg 1 T" Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 U" D $end
$var wire 1 D" clk $end
$var reg 1 V" Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 W" D $end
$var wire 1 D" clk $end
$var reg 1 X" Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 Y" D $end
$var wire 1 D" clk $end
$var reg 1 Z" Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 [" D $end
$var wire 1 D" clk $end
$var reg 1 \" Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 ]" D $end
$var wire 1 D" clk $end
$var reg 1 ^" Q $end
$upscope $end
$upscope $end
$scope module r_f[1] $end
$var wire 1 # clock $end
$var wire 12 _" in [11:0] $end
$var wire 1 `" mid $end
$var wire 1 a" we $end
$var wire 12 b" out [11:0] $end
$scope module d[0] $end
$var wire 1 c" D $end
$var wire 1 `" clk $end
$var reg 1 d" Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 e" D $end
$var wire 1 `" clk $end
$var reg 1 f" Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 g" D $end
$var wire 1 `" clk $end
$var reg 1 h" Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 i" D $end
$var wire 1 `" clk $end
$var reg 1 j" Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 k" D $end
$var wire 1 `" clk $end
$var reg 1 l" Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 m" D $end
$var wire 1 `" clk $end
$var reg 1 n" Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 o" D $end
$var wire 1 `" clk $end
$var reg 1 p" Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 q" D $end
$var wire 1 `" clk $end
$var reg 1 r" Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 s" D $end
$var wire 1 `" clk $end
$var reg 1 t" Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 u" D $end
$var wire 1 `" clk $end
$var reg 1 v" Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 w" D $end
$var wire 1 `" clk $end
$var reg 1 x" Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 y" D $end
$var wire 1 `" clk $end
$var reg 1 z" Q $end
$upscope $end
$upscope $end
$scope module r_f[2] $end
$var wire 1 # clock $end
$var wire 12 {" in [11:0] $end
$var wire 1 |" mid $end
$var wire 1 }" we $end
$var wire 12 ~" out [11:0] $end
$scope module d[0] $end
$var wire 1 !# D $end
$var wire 1 |" clk $end
$var reg 1 "# Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 ## D $end
$var wire 1 |" clk $end
$var reg 1 $# Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 %# D $end
$var wire 1 |" clk $end
$var reg 1 &# Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 '# D $end
$var wire 1 |" clk $end
$var reg 1 (# Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 )# D $end
$var wire 1 |" clk $end
$var reg 1 *# Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 +# D $end
$var wire 1 |" clk $end
$var reg 1 ,# Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 -# D $end
$var wire 1 |" clk $end
$var reg 1 .# Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 /# D $end
$var wire 1 |" clk $end
$var reg 1 0# Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 1# D $end
$var wire 1 |" clk $end
$var reg 1 2# Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 3# D $end
$var wire 1 |" clk $end
$var reg 1 4# Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 5# D $end
$var wire 1 |" clk $end
$var reg 1 6# Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 7# D $end
$var wire 1 |" clk $end
$var reg 1 8# Q $end
$upscope $end
$upscope $end
$scope module r_f[3] $end
$var wire 1 # clock $end
$var wire 12 9# in [11:0] $end
$var wire 1 :# mid $end
$var wire 1 ;# we $end
$var wire 12 <# out [11:0] $end
$scope module d[0] $end
$var wire 1 =# D $end
$var wire 1 :# clk $end
$var reg 1 ># Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 ?# D $end
$var wire 1 :# clk $end
$var reg 1 @# Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 A# D $end
$var wire 1 :# clk $end
$var reg 1 B# Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 C# D $end
$var wire 1 :# clk $end
$var reg 1 D# Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 E# D $end
$var wire 1 :# clk $end
$var reg 1 F# Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 G# D $end
$var wire 1 :# clk $end
$var reg 1 H# Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 I# D $end
$var wire 1 :# clk $end
$var reg 1 J# Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 K# D $end
$var wire 1 :# clk $end
$var reg 1 L# Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 M# D $end
$var wire 1 :# clk $end
$var reg 1 N# Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 O# D $end
$var wire 1 :# clk $end
$var reg 1 P# Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 Q# D $end
$var wire 1 :# clk $end
$var reg 1 R# Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 S# D $end
$var wire 1 :# clk $end
$var reg 1 T# Q $end
$upscope $end
$upscope $end
$scope module r_f[4] $end
$var wire 1 # clock $end
$var wire 12 U# in [11:0] $end
$var wire 1 V# mid $end
$var wire 1 W# we $end
$var wire 12 X# out [11:0] $end
$scope module d[0] $end
$var wire 1 Y# D $end
$var wire 1 V# clk $end
$var reg 1 Z# Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 [# D $end
$var wire 1 V# clk $end
$var reg 1 \# Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 ]# D $end
$var wire 1 V# clk $end
$var reg 1 ^# Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 _# D $end
$var wire 1 V# clk $end
$var reg 1 `# Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 a# D $end
$var wire 1 V# clk $end
$var reg 1 b# Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 c# D $end
$var wire 1 V# clk $end
$var reg 1 d# Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 e# D $end
$var wire 1 V# clk $end
$var reg 1 f# Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 g# D $end
$var wire 1 V# clk $end
$var reg 1 h# Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 i# D $end
$var wire 1 V# clk $end
$var reg 1 j# Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 k# D $end
$var wire 1 V# clk $end
$var reg 1 l# Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 m# D $end
$var wire 1 V# clk $end
$var reg 1 n# Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 o# D $end
$var wire 1 V# clk $end
$var reg 1 p# Q $end
$upscope $end
$upscope $end
$scope module r_f[5] $end
$var wire 1 # clock $end
$var wire 12 q# in [11:0] $end
$var wire 1 r# mid $end
$var wire 1 s# we $end
$var wire 12 t# out [11:0] $end
$scope module d[0] $end
$var wire 1 u# D $end
$var wire 1 r# clk $end
$var reg 1 v# Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 w# D $end
$var wire 1 r# clk $end
$var reg 1 x# Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 y# D $end
$var wire 1 r# clk $end
$var reg 1 z# Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 {# D $end
$var wire 1 r# clk $end
$var reg 1 |# Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 }# D $end
$var wire 1 r# clk $end
$var reg 1 ~# Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 !$ D $end
$var wire 1 r# clk $end
$var reg 1 "$ Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 #$ D $end
$var wire 1 r# clk $end
$var reg 1 $$ Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 %$ D $end
$var wire 1 r# clk $end
$var reg 1 &$ Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 '$ D $end
$var wire 1 r# clk $end
$var reg 1 ($ Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 )$ D $end
$var wire 1 r# clk $end
$var reg 1 *$ Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 +$ D $end
$var wire 1 r# clk $end
$var reg 1 ,$ Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 -$ D $end
$var wire 1 r# clk $end
$var reg 1 .$ Q $end
$upscope $end
$upscope $end
$scope module r_f[6] $end
$var wire 1 # clock $end
$var wire 12 /$ in [11:0] $end
$var wire 1 0$ mid $end
$var wire 1 1$ we $end
$var wire 12 2$ out [11:0] $end
$scope module d[0] $end
$var wire 1 3$ D $end
$var wire 1 0$ clk $end
$var reg 1 4$ Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 5$ D $end
$var wire 1 0$ clk $end
$var reg 1 6$ Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 7$ D $end
$var wire 1 0$ clk $end
$var reg 1 8$ Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 9$ D $end
$var wire 1 0$ clk $end
$var reg 1 :$ Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 ;$ D $end
$var wire 1 0$ clk $end
$var reg 1 <$ Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 =$ D $end
$var wire 1 0$ clk $end
$var reg 1 >$ Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 ?$ D $end
$var wire 1 0$ clk $end
$var reg 1 @$ Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 A$ D $end
$var wire 1 0$ clk $end
$var reg 1 B$ Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 C$ D $end
$var wire 1 0$ clk $end
$var reg 1 D$ Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 E$ D $end
$var wire 1 0$ clk $end
$var reg 1 F$ Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 G$ D $end
$var wire 1 0$ clk $end
$var reg 1 H$ Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 I$ D $end
$var wire 1 0$ clk $end
$var reg 1 J$ Q $end
$upscope $end
$upscope $end
$scope module r_f[7] $end
$var wire 1 # clock $end
$var wire 12 K$ in [11:0] $end
$var wire 1 L$ mid $end
$var wire 1 M$ we $end
$var wire 12 N$ out [11:0] $end
$scope module d[0] $end
$var wire 1 O$ D $end
$var wire 1 L$ clk $end
$var reg 1 P$ Q $end
$upscope $end
$scope module d[1] $end
$var wire 1 Q$ D $end
$var wire 1 L$ clk $end
$var reg 1 R$ Q $end
$upscope $end
$scope module d[2] $end
$var wire 1 S$ D $end
$var wire 1 L$ clk $end
$var reg 1 T$ Q $end
$upscope $end
$scope module d[3] $end
$var wire 1 U$ D $end
$var wire 1 L$ clk $end
$var reg 1 V$ Q $end
$upscope $end
$scope module d[4] $end
$var wire 1 W$ D $end
$var wire 1 L$ clk $end
$var reg 1 X$ Q $end
$upscope $end
$scope module d[5] $end
$var wire 1 Y$ D $end
$var wire 1 L$ clk $end
$var reg 1 Z$ Q $end
$upscope $end
$scope module d[6] $end
$var wire 1 [$ D $end
$var wire 1 L$ clk $end
$var reg 1 \$ Q $end
$upscope $end
$scope module d[7] $end
$var wire 1 ]$ D $end
$var wire 1 L$ clk $end
$var reg 1 ^$ Q $end
$upscope $end
$scope module d[8] $end
$var wire 1 _$ D $end
$var wire 1 L$ clk $end
$var reg 1 `$ Q $end
$upscope $end
$scope module d[9] $end
$var wire 1 a$ D $end
$var wire 1 L$ clk $end
$var reg 1 b$ Q $end
$upscope $end
$scope module d[10] $end
$var wire 1 c$ D $end
$var wire 1 L$ clk $end
$var reg 1 d$ Q $end
$upscope $end
$scope module d[11] $end
$var wire 1 e$ D $end
$var wire 1 L$ clk $end
$var reg 1 f$ Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xf$
0e$
xd$
0c$
xb$
0a$
x`$
0_$
x^$
0]$
x\$
0[$
xZ$
0Y$
xX$
0W$
xV$
0U$
xT$
0S$
xR$
1Q$
xP$
0O$
bx N$
0M$
0L$
b10 K$
xJ$
0I$
xH$
0G$
xF$
0E$
xD$
0C$
xB$
0A$
x@$
0?$
x>$
0=$
x<$
0;$
x:$
09$
x8$
07$
x6$
15$
x4$
03$
bx 2$
01$
00$
b10 /$
x.$
0-$
x,$
0+$
x*$
0)$
x($
0'$
x&$
0%$
x$$
0#$
x"$
0!$
x~#
0}#
x|#
0{#
xz#
0y#
xx#
1w#
xv#
0u#
bx t#
0s#
0r#
b10 q#
xp#
0o#
xn#
0m#
xl#
0k#
xj#
0i#
xh#
0g#
xf#
0e#
xd#
0c#
xb#
0a#
x`#
0_#
x^#
0]#
x\#
1[#
xZ#
0Y#
bx X#
0W#
0V#
b10 U#
xT#
0S#
xR#
0Q#
xP#
0O#
xN#
0M#
xL#
0K#
xJ#
0I#
xH#
0G#
xF#
0E#
xD#
0C#
xB#
0A#
x@#
1?#
x>#
0=#
bx <#
0;#
0:#
b10 9#
x8#
07#
x6#
05#
x4#
03#
x2#
01#
x0#
0/#
x.#
0-#
x,#
0+#
x*#
0)#
x(#
0'#
x&#
0%#
x$#
1##
x"#
0!#
bx ~"
1}"
0|"
b10 {"
xz"
0y"
xx"
0w"
xv"
0u"
xt"
0s"
xr"
0q"
xp"
0o"
xn"
0m"
xl"
0k"
xj"
0i"
xh"
0g"
xf"
1e"
xd"
0c"
bx b"
0a"
0`"
b10 _"
x^"
0]"
x\"
0["
xZ"
0Y"
xX"
0W"
xV"
0U"
xT"
0S"
xR"
0Q"
xP"
0O"
xN"
0M"
xL"
0K"
xJ"
1I"
xH"
0G"
bx F"
0E"
0D"
b10 C"
b0 B"
bx A"
0@"
bx ?"
1>"
bx ="
b0 <"
bx ;"
0:"
bx 9"
18"
bx 7"
bx 6"
b0 5"
14"
bx 3"
02"
bx 1"
bx 0"
b0 /"
1."
bx -"
0,"
bx +"
bx *"
bx )"
b1 ("
bx '"
b0 &"
bx %"
0$"
bx #"
1""
bx !"
bx ~
b0 }
1|
bx {
0z
bx y
bx x
b0 w
1v
bx u
0t
bx s
bx r
bx q
b1 p
bx o
bx n
bx m
b1 l
bx k
b0 j
bx i
0h
bx g
1f
bx e
b0 d
bx c
0b
bx a
1`
bx _
b0 ^
bx ]
0\
bx [
1Z
bx Y
b0 X
bx W
0V
bx U
1T
bx S
bx R
bx Q
b0 P
bx O
b0 N
bx M
0L
bx K
1J
bx I
b0 H
bx G
0F
bx E
1D
bx C
b0 B
bx A
0@
bx ?
1>
bx =
bx <
bx ;
b0 :
bx 9
bx 8
bx 7
b0 6
bx 5
b100 4
b101 3
b10 2
bx 1
bx 0
bx /
b100 .
b100 -
b10 ,
b10 +
b1 *
b0 )
b10 (
b10 '
1&
b1 %
b0 $
0#
bx "
bx !
$end
#20000
b10xxxxxxxxxxxx <
b10xxxxxxxxxxxx I
b10 E
b10 G
bx000000000010 C
bx000000000010 y
bx000000000010xxxxxxxxxxxxxxxxxxxxxxxx 9
bx000000000010xxxxxxxxxxxxxxxxxxxxxxxx o
0"#
1$#
0&#
0(#
0*#
0,#
0.#
00#
02#
04#
06#
bx000000000010xxxxxxxxxxxxxxxxxxxxxxxx /
bx000000000010xxxxxxxxxxxxxxxxxxxxxxxx 5
bx000000000010xxxxxxxxxxxxxxxxxxxxxxxx k
b10 ~"
08#
1|"
1#
#40000
b10 "
b10 1
b10 7
b10 g
b10 i
1E"
0}"
b0 M
bx000000000010 8
bx000000000010 e
b10 ;
b10 K
b0 c
b1 -
0J
b10 N
0`
bx d
b1 .
b1 4
1L
1b
0I"
0e"
0##
0?#
0[#
0w#
05$
0Q$
b111 3
b10 :
b10 P
0|"
b0 (
b0 ,
b0 C"
b0 _"
b0 {"
b0 9#
b0 U#
b0 q#
b0 /$
b0 K$
b0 '
b0 +
b0 2
b10 $
b10 )
b10 6
0#
#60000
b10000000000000 <
b10000000000000 I
b0 ?
b0 A
bx000000000000 =
bx000000000000 s
bx000000000010xxxxxxxxxxxx000000000000 9
bx000000000010xxxxxxxxxxxx000000000000 o
0H"
0J"
0L"
0N"
0P"
0R"
0T"
0V"
0X"
0Z"
0\"
bx000000000010xxxxxxxxxxxx000000000000 /
bx000000000010xxxxxxxxxxxx000000000000 5
bx000000000010xxxxxxxxxxxx000000000000 k
b0 F"
0^"
1D"
1#
#80000
b10 !
b10 0
b10 m
b10 ?"
b10 A"
b10 q
b10 #"
bx000000000010 n
bx000000000010 ="
bx )"
bx 9"
b0 "
b0 1
b0 7
b0 g
b0 i
0E"
1W#
b0 u
b10 }
b10000000000000 r
b10000000000000 !"
b10 {
b0 %"
bx /"
bx -"
bx 5"
bx *"
bx 7"
bx 3"
b0 ;"
b0 ;
b0 K
bx c
bx000000000000 8
bx000000000000 e
bx Q
bx a
b10000 -
1t
b0 x
1z
b0 ~
0""
b10 &"
1,"
b0 0"
12"
b0 6"
08"
bx <"
1J
b0 N
1`
b0 d
b10000 .
b10000 4
0v
0|
1$"
0."
04"
1:"
0L
0b
1G"
1c"
1!#
1=#
1Y#
1u#
13$
1O$
b110 3
b10 p
b10 ("
b0 :
b0 P
0D"
b1 (
b1 ,
b1 C"
b1 _"
b1 {"
b1 9#
b1 U#
b1 q#
b1 /$
b1 K$
b1 '
b1 +
b1 2
b10 %
b10 *
b10 l
b0 $
b0 )
b0 6
0#
#100000
b1000000000000 8
b1000000000000 e
b1 Q
b1 a
b1 c
bx000000000001 R
bx000000000001 _
b1 U
bx000000000001 *"
bx000000000001 7"
b1 -"
b1 W
b1 /"
bx000000000001 S
bx000000000001 +"
bx000000000001 O
bx000000000001 '"
1Z#
0\#
0^#
0`#
0b#
0d#
0f#
0h#
0j#
0l#
0n#
bx000000000001xxxxxxxxxxxx000000000010xxxxxxxxxxxx000000000000 /
bx000000000001xxxxxxxxxxxx000000000010xxxxxxxxxxxx000000000000 5
bx000000000001xxxxxxxxxxxx000000000010xxxxxxxxxxxx000000000000 k
b1 X#
0p#
1V#
1#
#120000
